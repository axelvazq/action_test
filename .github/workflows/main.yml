name: Build and Publish

on:
  create:
    branches:
    - main
    tags:
      - '*'
  pull_request:
    branches:
    - main
    - dev
    - testing
    types:
    - opened
    - synchronize
    - closed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Image env
      run: |
        if [[ "${{ github.event_name }}" == 'push' && "${{ github.ref }}" =~ ^refs/tags/ ]]; then
          TAG_OR_SHA="${{ github.event.ref }}"
        else
          TAG_OR_SHA="$(echo $GITHUB_SHA | cut -c 1-6)"
        fi
        echo "IMAGE_TAG=$TAG_OR_SHA" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build Docker Image
      run: docker build -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG .

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker Image to GitHub Container Registry
      run: |
        docker tag $REGISTRY/$IMAGE_NAME:$IMAGE_TAG $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
        docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    if: |
     (github.event_name == 'create' && github.event.ref_type == 'tag') || 
     (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged)
    
    needs:
    - setup
    - build    

    steps:
    - name: Deploy using SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} $REGISTRY
          docker pull $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker run -d --name $WEB_APP_NAME -p $WEB_APP_PORT:$WEB_APP_PORT $REGISTRY/$IMAGE_NAME:$IMAGE_TAG

